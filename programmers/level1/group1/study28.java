/** programmers 문제풀이
 * 
 * ==========================================
 * 소수 찾기
 * 
 * 문제 설명
 * 1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.
 * 
 * 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
 * (1은 소수가 아닙니다.)
 * 
 * 제한 조건
 * n은 2이상 1000000이하의 자연수입니다.
 * 입출력 예
 * n	result
 * 10	4
 * 5	3
 * ===================================
 * 
 * 이 문제는 소수 인지를 찾는 것이 아니라 소수의 갯수를 파악하는 것이다. 만약 입력값이 여러
 * 개라면 메모이제이션을 활용해서 1000000만까지의 답을 구한 다음 뽑아 쓰는게 효율적이지만 
 * 한번 쓰고 초기화 되기 때문에 소수 갯수를 계속 다시 찾아줘야한다.
 * 그런데 그렇다고 1부터 n까지 하나하나 소수인지 판단하는 건 판단도 오래 걸릴 뿐더러 시간적
 * 으로 n의 시간이 걸린다.
 * 하지만 1부터 n까지의 수 중 소수가 아닌 수의 특징은 1부터 루트n 사이 소수의 배수라는 특징
 * 을 가진다.
 * 만약 n이 16일 경우 소수가 아닌 수는 1부터 4사이 소수인 2,3의 배수라는 것이다.
 * 
 * 그러므로 1부터 n까지 소수인지를 파악하는 것이 아닌 루트n 까지만 소수인지 알아내면 된다.
 * 그후 소수의 배수만 다 제외하고 남은 수를 찾으면 알 수 있다.
 * 
 */

public class study28 {
    public int solution(int n) {
        boolean[] check = new boolean[n+1];
        //루트n을 tmp에 저장
        int tmp = (int)Math.sqrt(n);
        for(int i=2;i<=tmp;i++){
            //소수가 아니라면
            if(check[i]){
                continue;
            }
            //소수라면 소수의 배수를 n까지 찾는다.
            int idx = i*2;
            while(idx<=n){
                check[idx] = true;
                idx +=i;
            }
        }
        
        //배수로 안걸러진 수를 찾는다.
        int answer = 0;
        for(int i =2;i<=n;i++){
            if(!check[i]){
                answer++;
            }
        }
        return answer;
    }
}

/**
 * 실행 결과  정확성과 효율성이 같이 테스트 되는 문제이다. 이는 1부터 n까지 소수인지를 찾는
 * 다면 시간 초과가 걸릴 것으로 예상된다.
 * 정확성 테스트
 * 테스트 1 〉	통과 (0.03ms, 52.5MB)
 * 테스트 2 〉	통과 (0.04ms, 52.8MB)
 * 테스트 3 〉	통과 (0.06ms, 52.7MB)
 * 테스트 4 〉	통과 (0.15ms, 51.8MB)
 * 테스트 5 〉	통과 (0.07ms, 53.1MB)
 * 테스트 6 〉	통과 (0.61ms, 52.6MB)
 * 테스트 7 〉	통과 (0.19ms, 51.8MB)
 * 테스트 8 〉	통과 (0.48ms, 51.8MB)
 * 테스트 9 〉	통과 (0.67ms, 52.8MB)
 * 테스트 10 〉	통과 (10.34ms, 52.7MB)
 * 테스트 11 〉	통과 (12.43ms, 52.9MB)
 * 테스트 12 〉	통과 (10.87ms, 52.3MB)
 * 
 * 효율성  테스트
 * 테스트 1 〉	통과 (23.10ms, 53.8MB)
 * 테스트 2 〉	통과 (29.41ms, 72MB)
 * 테스트 3 〉	통과 (11.80ms, 53.4MB)
 * 테스트 4 〉	통과 (16.75ms, 53.6MB)
 */