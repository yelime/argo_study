/** programmers 문제풀이
 * 
 * ==========================================
 * 문자열 내 p와 y의 개수
 * 
 * 문제 설명
 * 대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 'p'의 개수와 'y'의 개수를 비교해 
 * 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. 'p', 'y' 모두 하나도 없는 
 * 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.
 * 
 * 예를 들어 s가 "pPoooyY"면 true를 return하고 "Pyy"라면 false를 return합니다.
 * 
 * 제한사항
 * 문자열 s의 길이 : 50 이하의 자연수
 * 문자열 s는 알파벳으로만 이루어져 있습니다.
 * 
 * 입출력 예
 * s	        answer
 * "pPoooyY"	true
 * "Pyy"	    false
 * ===================================
 * 
 * 문자열 중에서 p,P,y,Y만 찾으면 되고, 원본을 유지할 필요가 없으므로 4글자를 제외한 나머지는 
 * 삭제를 해주고 시작하는 것이 좋아 보인다. 이후 글자의 수가 홀수면 절대 true가 될 수 없다.
 * 그렇게 짝수가 나올 경우 p,P를 다시 제외 시키고 길이가 이전 값의 절반이라면 true이다.
 * 
 */

public class study16 {
    boolean solution(String s) {
        s= s.replaceAll("[^pPyY]","");
        int tmp = s.length();
        //4글자의 수가 홀수이다.
        if(tmp%2==1){
            return false;
        }
        s= s.replaceAll("[pP]","");
        return s.length() == tmp/2;
    }
}
/**
 * 실행 결과
 * 테스트 1 〉	통과 (0.14ms, 52MB)
 * 테스트 2 〉	통과 (0.09ms, 53.1MB)
 * 테스트 3 〉	통과 (0.10ms, 52.6MB)
 * 테스트 4 〉	통과 (0.08ms, 52.7MB)
 * 테스트 5 〉	통과 (0.17ms, 53MB)
 * 테스트 6 〉	통과 (0.19ms, 52.6MB)
 * 테스트 7 〉	통과 (0.31ms, 52.3MB)
 * 테스트 8 〉	통과 (0.30ms, 52.2MB)
 * 테스트 9 〉	통과 (0.33ms, 52.3MB)
 * 테스트 10 〉	통과 (0.35ms, 52.3MB)
 * 테스트 11 〉	통과 (0.28ms, 52.4MB)
 * 테스트 12 〉	통과 (0.33ms, 51.9MB)
 * 테스트 13 〉	통과 (0.33ms, 52.9MB)
 * 테스트 14 〉	통과 (0.32ms, 53.1MB)
 * 테스트 15 〉	통과 (0.30ms, 52.4MB)
 * 테스트 16 〉	통과 (0.32ms, 53MB)
 * 테스트 17 〉	통과 (0.26ms, 51.9MB)
 * 테스트 18 〉	통과 (0.24ms, 51.9MB)
 * 테스트 19 〉	통과 (0.33ms, 52MB)
 * 테스트 20 〉	통과 (0.26ms, 52MB)
 * 테스트 21 〉	통과 (0.25ms, 52MB)
 * 테스트 22 〉	통과 (0.22ms, 52.8MB)
 * 테스트 23 〉	통과 (0.22ms, 52MB)
 * 테스트 24 〉	통과 (0.21ms, 51.8MB)
 * 테스트 25 〉	통과 (0.24ms, 52.7MB)
 * 테스트 26 〉	통과 (0.20ms, 51.5MB)
 * 테스트 27 〉	통과 (0.25ms, 51.9MB)
 * 테스트 28 〉	통과 (0.29ms, 52.1MB)
 */