/** programmers 문제풀이
 * 
 * ==========================================
 * 소수 만들기
 * 
 * 문제 설명
 * 주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 
 * 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 
 * 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수
 * 를 완성해주세요.
 * 
 * 제한사항
 * nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다.
 * nums의 각 원소는 1 이상 1,000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다.
 * 
 * 입출력 예
 * nums	        result
 * [1,2,3,4]	1
 * [1,2,7,6,4]	4
 * ===================================
 * 
 * 이 문제는 소수를 만들수 있는 조합을 묻는 문제로 조합을 만들어 소수인지 판단하기 
 * 보다는 소수 배열에서 찾는 것이 더 빠를 수 있다. 
 * 최대합인 2997까지 소수인지를 구하고, 그 뒤 조합을 해서 배열에서 찾을 것이다.
 * 
 */

public class study29 {
    public int solution(int[] nums) {
        int max = 2997;
        boolean[] check = new boolean[max+1];
        int tmp = (int)Math.sqrt(max);
        //소수를 찾는 과정
        for(int i = 2;i<=tmp;i++){
            if(check[i]){
                continue;
            }
            int idx = i*i;
            while(idx<=max){
                check[idx] = true;
                idx += i;
            }
        }
        //조합하는 과정
        int answer = 0;
        int len = nums.length;
        for(int i=0;i<len-2;i++){
            for(int j=i+1;j<len-1;j++){
                for(int k=j+1;k<len;k++){
                    int sum = nums[i]+nums[j]+nums[k];
                    if(!check[sum]){
                        answer++;
                    }
                }
            }
        }

        return answer;
    }
}


/**
 * 실행 결과
 * 테스트 1 〉	통과 (0.35ms, 52.5MB)
 * 테스트 2 〉	통과 (0.34ms, 53.2MB)
 * 테스트 3 〉	통과 (0.21ms, 52MB)
 * 테스트 4 〉	통과 (0.20ms, 53.1MB)
 * 테스트 5 〉	통과 (0.41ms, 52.6MB)
 * 테스트 6 〉	통과 (0.40ms, 51.5MB)
 * 테스트 7 〉	통과 (0.18ms, 52.2MB)
 * 테스트 8 〉	통과 (0.85ms, 51.4MB)
 * 테스트 9 〉	통과 (0.21ms, 53MB)
 * 테스트 10 〉	통과 (0.70ms, 52.5MB)
 * 테스트 11 〉	통과 (0.16ms, 52.1MB)
 * 테스트 12 〉	통과 (0.09ms, 51.5MB)
 * 테스트 13 〉	통과 (0.17ms, 54MB)
 * 테스트 14 〉	통과 (0.17ms, 52.5MB)
 * 테스트 15 〉	통과 (0.15ms, 51.8MB)
 * 테스트 16 〉	통과 (1.45ms, 52.2MB)
 * 테스트 17 〉	통과 (1.01ms, 52.7MB)
 * 테스트 18 〉	통과 (0.17ms, 52.8MB)
 * 테스트 19 〉	통과 (0.14ms, 52.5MB)
 * 테스트 20 〉	통과 (1.01ms, 52.1MB)
 * 테스트 21 〉	통과 (1.05ms, 51.8MB)
 * 테스트 22 〉	통과 (0.32ms, 51.9MB)
 * 테스트 23 〉	통과 (0.16ms, 51.7MB)
 * 테스트 24 〉	통과 (0.85ms, 52.8MB)
 * 테스트 25 〉	통과 (0.69ms, 52.1MB)
 * 테스트 26 〉	통과 (0.17ms, 52.2MB)
 */