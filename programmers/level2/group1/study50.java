/** programmers 문제풀이
 * 
 * ==========================================
 * 짝지어 제거하기
 * 문제 설명
 * 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.
 * 
 * 예를 들어, 문자열 S = baabaa 라면
 * 
 * b aa baa → bb aa → aa →
 * 
 * 의 순서로 문자열을 모두 제거할 수 있으므로 1을 반환합니다.
 * 
 * 제한사항
 * 문자열의 길이 : 1,000,000이하의 자연수
 * 문자열은 모두 소문자로 이루어져 있습니다.
 * 
 * 입출력 예
 * s	    result
 * baabaa	1
 * cdcd	    0
 * ===================================
 */
import java.util.*;

public class study50 {
    public int solution(String s)
    {
        char[] c = s.toCharArray();
        Stack<Character> st = new Stack<>();
        
        for(char tmp : c){
            if(st.isEmpty()){
                st.push(tmp);
                continue;
            }
            if(st.peek() == tmp){
                st.pop();
                continue;
            }
            st.push(tmp);
        }
        if(st.isEmpty()){
            return 1;
        }

        return 0;
    }
}

/**
 * 실행 결과
 * 정확성  테스트
 * 테스트 1 〉	통과 (0.24ms, 52.1MB)
 * 테스트 2 〉	통과 (19.81ms, 53MB)
 * 테스트 3 〉	통과 (22.82ms, 55.2MB)
 * 테스트 4 〉	통과 (23.36ms, 53.7MB)
 * 테스트 5 〉	통과 (22.52ms, 54.1MB)
 * 테스트 6 〉	통과 (23.84ms, 52.9MB)
 * 테스트 7 〉	통과 (24.52ms, 54.3MB)
 * 테스트 8 〉	통과 (22.72ms, 54.3MB)
 * 테스트 9 〉	통과 (0.21ms, 52.1MB)
 * 테스트 10 〉	통과 (1.02ms, 52.5MB)
 * 테스트 11 〉	통과 (0.22ms, 53.3MB)
 * 테스트 12 〉	통과 (0.26ms, 52.8MB)
 * 테스트 13 〉	통과 (0.27ms, 52.8MB)
 * 효율성  테스트
 * 테스트 1 〉	통과 (68.41ms, 63.2MB)
 * 테스트 2 〉	통과 (50.86ms, 57.8MB)
 * 테스트 3 〉	통과 (55.70ms, 61.6MB)
 * 테스트 4 〉	통과 (57.54ms, 62MB)
 * 테스트 5 〉	통과 (59.16ms, 61.4MB)
 * 테스트 6 〉	통과 (55.20ms, 61.6MB)
 * 테스트 7 〉	통과 (54.82ms, 61.4MB)
 * 테스트 8 〉	통과 (54.63ms, 61MB)
 */